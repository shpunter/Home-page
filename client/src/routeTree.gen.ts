/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root.tsx'
import { Route as SubImport } from './routes/sub.tsx'
import { Route as MulImport } from './routes/mul.tsx'
import { Route as InstallImport } from './routes/install.tsx'
import { Route as DivImport } from './routes/div.tsx'
import { Route as AddImport } from './routes/add.tsx'
import { Route as IndexImport } from './routes/index.tsx'

// Create/Update Routes

const SubRoute = SubImport.update({
  id: '/sub',
  path: '/sub',
  getParentRoute: () => rootRoute,
} as any)

const MulRoute = MulImport.update({
  id: '/mul',
  path: '/mul',
  getParentRoute: () => rootRoute,
} as any)

const InstallRoute = InstallImport.update({
  id: '/install',
  path: '/install',
  getParentRoute: () => rootRoute,
} as any)

const DivRoute = DivImport.update({
  id: '/div',
  path: '/div',
  getParentRoute: () => rootRoute,
} as any)

const AddRoute = AddImport.update({
  id: '/add',
  path: '/add',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/add': {
      id: '/add'
      path: '/add'
      fullPath: '/add'
      preLoaderRoute: typeof AddImport
      parentRoute: typeof rootRoute
    }
    '/div': {
      id: '/div'
      path: '/div'
      fullPath: '/div'
      preLoaderRoute: typeof DivImport
      parentRoute: typeof rootRoute
    }
    '/install': {
      id: '/install'
      path: '/install'
      fullPath: '/install'
      preLoaderRoute: typeof InstallImport
      parentRoute: typeof rootRoute
    }
    '/mul': {
      id: '/mul'
      path: '/mul'
      fullPath: '/mul'
      preLoaderRoute: typeof MulImport
      parentRoute: typeof rootRoute
    }
    '/sub': {
      id: '/sub'
      path: '/sub'
      fullPath: '/sub'
      preLoaderRoute: typeof SubImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/add': typeof AddRoute
  '/div': typeof DivRoute
  '/install': typeof InstallRoute
  '/mul': typeof MulRoute
  '/sub': typeof SubRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/add': typeof AddRoute
  '/div': typeof DivRoute
  '/install': typeof InstallRoute
  '/mul': typeof MulRoute
  '/sub': typeof SubRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/add': typeof AddRoute
  '/div': typeof DivRoute
  '/install': typeof InstallRoute
  '/mul': typeof MulRoute
  '/sub': typeof SubRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/add' | '/div' | '/install' | '/mul' | '/sub'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/add' | '/div' | '/install' | '/mul' | '/sub'
  id: '__root__' | '/' | '/add' | '/div' | '/install' | '/mul' | '/sub'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AddRoute: typeof AddRoute
  DivRoute: typeof DivRoute
  InstallRoute: typeof InstallRoute
  MulRoute: typeof MulRoute
  SubRoute: typeof SubRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AddRoute: AddRoute,
  DivRoute: DivRoute,
  InstallRoute: InstallRoute,
  MulRoute: MulRoute,
  SubRoute: SubRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/add",
        "/div",
        "/install",
        "/mul",
        "/sub"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/add": {
      "filePath": "add.tsx"
    },
    "/div": {
      "filePath": "div.tsx"
    },
    "/install": {
      "filePath": "install.tsx"
    },
    "/mul": {
      "filePath": "mul.tsx"
    },
    "/sub": {
      "filePath": "sub.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
